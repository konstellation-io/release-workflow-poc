name: "Release"
on:
  workflow_dispatch:
  push:
    branches:
      - "main"
      - "release/**"
      - "hotfix/**"

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        persist-credentials: false
        token: ${{ secrets.PAT_TOKEN }}
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

    - name: Install Chart Releaser
      uses: helm/chart-releaser-action@v1.5.0
      with:
        install_only: true
        version: v1.5.0
    
    - name: get repository name
      run: echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

    - name: Semantic Release
      uses: cycjimmy/semantic-release-action@v3
      id: semantic-release
      with:
        extra_plugins: |
          @semantic-release/exec
          @semantic-release/changelog
          @semantic-release/git
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
    
    - name: get repository name
      run: echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
    outputs:
      new_release_published: ${{ steps.semantic-release.outputs.new_release_published }}

  build_push:
    strategy:
      matrix:
        services:
          - "package1"
          - "package2"
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.services }}
          file: ${{ matrix.services }}/Dockerfile
          push: false
          tags: |
            ${{ matrix.services }}:${{ github.sha }}
            ${{ matrix.services }}:${{ github.ref_name }}

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - build_push
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
    - name: Publish Chart
      run: ./scripts/release_chart.sh
      env:
        REPOSITORY_OWNER: ${{ github.repository_owner }}
        REPOSITORY_NAME: ${{ env.REPOSITORY_NAME }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # - name: helm push
    #   if: steps.semantic-release.outputs.new_release_published == 'true'
    #   run: |
    #     echo ${{ secrets.PAT_TOKEN }} | helm registry login ghcr.io -u $ --password-stdin
    #     helm package helm/workflow-poc
    #     helm push workflow-poc-${{ steps.semantic-release.outputs.new_release_version }}.tgz oci://ghcr.io/${{ gisitory_owner }}thub.repository_owner }}